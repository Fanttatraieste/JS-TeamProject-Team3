{"mappings":"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","sources":["<anon>","src/JavaScript/body.js","src/JavaScript/trending.js","src/JavaScript/key.js","src/JavaScript/genre.js","src/JavaScript/modal.js","src/index.js","src/JavaScript/number.js","src/JavaScript/header.js"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired53d\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired53d\"] = parcelRequire;\n}\nparcelRequire.register(\"alqyX\", function(module, exports) {\n\nvar $7KuJr = parcelRequire(\"7KuJr\");\n\nvar $eLMAK = parcelRequire(\"eLMAK\");\n\nvar $2X5g8 = parcelRequire(\"2X5g8\");\n$7KuJr(1).then((list)=>console.log(list));\n$7KuJr(2).then((list)=>console.log(list));\n$7KuJr(3).then((list)=>console.log(list));\n$7KuJr(4).then((list)=>console.log(list));\nmodule.exports = (page)=>{\n    $7KuJr(page).then((list)=>{\n        // primesc ca parametru list, care e o lista de 20 de obiecte\n        // fiecare obiect reprezinta un film\n        renderPage(list);\n    });\n    function renderPage(movieList) {\n        let movieContainer = document.querySelector(\".movies__container\");\n        movieContainer.innerHTML = \"\";\n        movieList.forEach((movie)=>{\n            // const htmlElement = createElementProstule(movie);\n            // htmlElement.addEventListener('click', event => {\n            //   modal(movie);\n            //   console.log('------   Obiect Vlad    ------');\n            //   console.log(movie);\n            // });\n            // movieContainer.appendChild(htmlElement);\n            createElementProstule(movie).then((htmlElement)=>{\n                htmlElement.addEventListener(\"click\", (event)=>{\n                    $2X5g8(movie);\n                    console.log(\"------   Obiect Vlad    ------\");\n                    console.log(movie);\n                });\n                movieContainer.appendChild(htmlElement);\n            });\n        });\n        async function createElementProstule(e) {\n            const elDiv = document.createElement(\"div\");\n            elDiv.classList.add(\"movies__container__item\");\n            const moviePoster = document.createElement(\"img\");\n            moviePoster.src = `https://image.tmdb.org/t/p/w500${e.poster_path}`;\n            moviePoster.classList.add(\"movies__container__image\");\n            elDiv.appendChild(moviePoster);\n            const text = document.createElement(\"div\");\n            const title = document.createElement(\"p\");\n            //\n            let t = \"\";\n            if (e.title.length <= 25) t = e.title;\n            else {\n                let elist = e.title.split(\"\");\n                while(elist.length > 30)elist.pop();\n                elist.push(\".\");\n                elist.push(\".\");\n                elist.push(\".\");\n                t = elist.join(\"\");\n            }\n            //\n            title.innerHTML = `${t}`;\n            title.classList.add(\"movies__container__title\");\n            text.appendChild(title);\n            //const genreList = e.genres.map(e => e.name);\n            let gen = \"\";\n            // if (genreList.length == 1) genres += genreList[0];\n            // else if (genreList.length == 2)\n            //   genres += genreList[0] + ' ' + genreList[1];\n            // else genres += genreList[0] + ' ' + genreList[1] + ' ' + 'other';\n            //\n            let genreList = await $eLMAK(); //am o lista de obiecte, unde fiecare obiect are id si nume\n            let genreIds = e.genre_ids; //aici am o lista de Id-uri\n            gen += createGenreString(genreList, genreIds);\n            //\n            gen += \" | \";\n            const year = e.release_date.slice(0, 4);\n            gen += `${year}`;\n            const subtitle = document.createElement(\"p\");\n            subtitle.innerHTML = gen;\n            subtitle.classList.add(\"movies__container__genre\");\n            text.appendChild(subtitle);\n            elDiv.appendChild(text);\n            // console.log(genres);\n            return elDiv;\n        }\n    }\n    function createGenreString(genreList, genreIds) {\n        // o sa imi fac o lista de stringuri facand match din genre id cu genre list\n        // console.log('----------------');\n        // console.log(genreList);\n        // console.log(genreIds);\n        // console.log('----------------');\n        let genreStrings = [];\n        let ok = false;\n        for(let i = 0; i < genreIds.length; i++){\n            ok = false;\n            for(let j = 0; j < genreList.length && ok === false; j++)if (genreIds[i] === genreList[j].id) {\n                genreStrings.push(genreList[j].name);\n                ok = true;\n            }\n        }\n        //aici voi avea in genreStrings toate genurile aferente unui film, sub forma de lista de stringuri\n        console.log(genreStrings);\n        //eu vreau sa returnez un String care sa contina max 2 genuri + cuvantul other\n        let ans = \"\"; //ans de la answer\n        if (genreStrings.length === 1) ans = genreStrings[0];\n        else if (genreStrings.length === 2) ans = genreStrings[0] + \", \" + genreStrings[1];\n        else ans = genreStrings[0] + \", \" + genreStrings[1] + \", \" + \"other\";\n        return ans;\n    }\n};\n\n});\nparcelRequire.register(\"7KuJr\", function(module, exports) {\n\nvar $jlIdh = parcelRequire(\"jlIdh\");\nvar $5a44aafdcc2fab0e$require$key = $jlIdh.key;\nmodule.exports = async (page)=>{\n    const response2 = await fetch(`https://api.themoviedb.org/3/trending/movie/day?page=${page}&api_key=${$5a44aafdcc2fab0e$require$key}`);\n    const obj2 = await response2.json();\n    const trendingList = obj2.results;\n    // console.log(obj2.page);\n    // console.log(obj2.total_pages);\n    //console.log(obj2.total_results);\n    return trendingList;\n};\n\n});\nparcelRequire.register(\"jlIdh\", function(module, exports) {\nmodule.exports = {\n    key: \"8b218b85545392c9f8705c30fbfd1bce\"\n};\n\n});\n\n\nparcelRequire.register(\"eLMAK\", function(module, exports) {\n\nvar $jlIdh = parcelRequire(\"jlIdh\");\nvar $ac0b25c9a1333ab3$require$key = $jlIdh.key;\nfetch(`https://api.themoviedb.org/3/genre/movie/list?language=en&api_key=${$ac0b25c9a1333ab3$require$key}`).then((res)=>res.json()).then((res)=>console.log(res.genres));\nmodule.exports = async ()=>{\n    const res = await fetch(`https://api.themoviedb.org/3/genre/movie/list?language=en&api_key=${$ac0b25c9a1333ab3$require$key}`);\n    const genreObj = await res.json();\n    return genreObj.genres; //returneaza o lista\n};\n\n});\n\nparcelRequire.register(\"2X5g8\", function(module, exports) {\n\nvar $eLMAK = parcelRequire(\"eLMAK\");\nmodule.exports = async (movie)=>{\n    const modal = document.querySelector(\".modal-wrapper\");\n    const closeModalBtn = document.querySelector(\".backdrop\");\n    toggleModal();\n    closeModalBtn.addEventListener(\"click\", ()=>{\n        modal.classList.add(\"is-hidden\");\n    });\n    function toggleModal() {\n        modal.classList.toggle(\"is-hidden\");\n    }\n    const voteRating = document.getElementById(\"voteRating\");\n    const voteCount = document.getElementById(\"voteCount\");\n    const popul = document.getElementById(\"popul\");\n    const origTitle = document.getElementById(\"origTitle\");\n    const about = document.getElementById(\"about\");\n    const image = document.getElementById(\"img\");\n    const filmTitle = document.getElementById(\"film-title\");\n    //\n    const gen = document.getElementById(\"genre\");\n    let genreList = await $eLMAK();\n    let genreIds = movie.genre_ids;\n    gen.innerHTML = createGenreString(genreList, genreIds);\n    //\n    voteRating.innerHTML = movie.vote_average;\n    voteCount.innerHTML = movie.vote_count;\n    popul.innerHTML = movie.popularity;\n    origTitle.innerHTML = movie.original_title;\n    about.innerHTML = movie.overview;\n    image.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n    filmTitle.innerHTML = movie.title;\n    // console.log(filmTitle);\n    // console.log(movie.title);\n    function createGenreString(genreList, genreIds) {\n        // o sa imi fac o lista de stringuri facand match din genre id cu genre list\n        // console.log('----------------');\n        // console.log(genreList);\n        // console.log(genreIds);\n        // console.log('----------------');\n        let genreStrings = \"\";\n        let ok = false;\n        for(let i = 0; i < genreIds.length; i++){\n            ok = false;\n            for(let j = 0; j < genreList.length && ok === false; j++)if (genreIds[i] === genreList[j].id) {\n                genreStrings += genreList[j].name;\n                genreStrings += \", \";\n                ok = true;\n            }\n        }\n        let n = genreStrings.length;\n        genreStrings = genreStrings.slice(0, n - 2);\n        return genreStrings;\n    }\n};\n\n});\n\n\nparcelRequire(\"alqyX\");\nvar $b52d25a72bb4cd31$exports = {};\n\n$b52d25a72bb4cd31$exports = ()=>{\n    const renderPages = (parcelRequire(\"alqyX\"));\n    let currentPage = 1;\n    const numbersDiv = document.querySelector(\".numbers\");\n    let currentHtmlElement = document.getElementById(`${currentPage}`);\n    const rightBtn = document.querySelector(\".right\");\n    const leftBtn = document.querySelector(\".left\");\n    addRed();\n    window.addEventListener(\"DOMContentLoaded\", function() {\n        renderPages(currentPage);\n        renderNumbers();\n    });\n    function renderNumbers() {\n        numbersDiv.innerHTML = \"\";\n        for(let i = currentPage - 2; i <= currentPage + 2 && i < 20; i++)if (i > 1 && i < 20) {\n            let numberDiv = document.createElement(\"div\");\n            numberDiv.classList.add(\"number\");\n            numberDiv.innerHTML = `${i}`;\n            numberDiv.setAttribute(\"id\", `${i}`);\n            numbersDiv.appendChild(numberDiv);\n            numberDiv.addEventListener(\"click\", ()=>{\n                deleteRed();\n                currentPage = numberDiv.id;\n                currentHtmlElement = document.getElementById(`${currentPage}`);\n                renderPages(currentPage);\n                //numbersDiv.innerHTML = '';\n                console.log(currentPage);\n                //renderNumbers();\n                //console.log(renderNumbers);\n                addRed();\n            });\n        }\n    }\n    //   function toggleCurrentPage() {\n    //     currentHtmlElement.classList.toggle('current-page');\n    //   }\n    function addRed() {\n        currentHtmlElement.classList.add(\"current-page\");\n    }\n    function deleteRed() {\n        currentHtmlElement.classList.toggle(\"current-page\");\n    }\n    rightBtn.addEventListener(\"click\", ()=>{\n        if (currentPage < 20) {\n            // console.log(currentPage);\n            // console.log(currentHtmlElement);\n            deleteRed();\n            currentPage++;\n            renderPages(currentPage);\n            renderNumbers();\n            currentHtmlElement = document.getElementById(`${currentPage}`);\n            deleteRed();\n        //console.log(currentPage);\n        //console.log(currentHtmlElement);\n        }\n    });\n    leftBtn.addEventListener(\"click\", ()=>{\n        if (currentPage > 1) {\n            // console.log(currentPage);\n            //console.log(currentHtmlElement);\n            deleteRed();\n            currentPage--;\n            renderPages(currentPage);\n            renderNumbers();\n            currentHtmlElement = document.getElementById(`${currentPage}`);\n            addRed();\n        //console.log(currentPage);\n        //console.log(currentHtmlElement);\n        }\n    });\n};\n\n\nvar $bf18e6d3494e7659$exports = {};\n\nvar $2X5g8 = parcelRequire(\"2X5g8\");\n\n$bf18e6d3494e7659$exports = ()=>{\n    const search = document.querySelector(\".search-bar\");\n    let movieTitle;\n    search.addEventListener(\"input\", (e)=>{\n        movieTitle = e.target.value;\n    });\n    //console.log(movieTitle);\n    const searchBtn = document.querySelector(\".search-button\");\n    searchBtn.addEventListener(\"click\", (e)=>{\n        const key = (parcelRequire(\"jlIdh\")).key;\n        const url = `https://api.themoviedb.org/3/search/movie?query=${movieTitle}&include_adult=false&language=en-US&page=1&api_key=${key}`;\n        let movieObj;\n        (async ()=>{\n            const response = await fetch(url);\n            const res = await response.json();\n            movieObj = res.results[0];\n            console.log(\"------  Obiect Giulia  -----\");\n            console.log(movieObj);\n            $2X5g8(movieObj);\n        })();\n    });\n};\n\n\n$bf18e6d3494e7659$exports();\n$b52d25a72bb4cd31$exports(); //se apeleaza functia\n //renderPages(5);\n\n})();\n//# sourceMappingURL=index.3ee78abd.js.map\n","const list = require('./trending');\nconst genres = require('./genre');\nconst modal = require('./modal');\n\nlist(1).then(list => console.log(list));\nlist(2).then(list => console.log(list));\nlist(3).then(list => console.log(list));\nlist(4).then(list => console.log(list));\n\nmodule.exports = page => {\n  list(page).then(list => {\n    // primesc ca parametru list, care e o lista de 20 de obiecte\n    // fiecare obiect reprezinta un film\n\n    renderPage(list);\n  });\n\n  function renderPage(movieList) {\n    let movieContainer = document.querySelector('.movies__container');\n    movieContainer.innerHTML = '';\n    movieList.forEach(movie => {\n      // const htmlElement = createElementProstule(movie);\n\n      // htmlElement.addEventListener('click', event => {\n      //   modal(movie);\n      //   console.log('------   Obiect Vlad    ------');\n      //   console.log(movie);\n      // });\n\n      // movieContainer.appendChild(htmlElement);\n\n      createElementProstule(movie).then(htmlElement => {\n        htmlElement.addEventListener('click', event => {\n          modal(movie);\n          console.log('------   Obiect Vlad    ------');\n          console.log(movie);\n        });\n\n        movieContainer.appendChild(htmlElement);\n      });\n    });\n\n    async function createElementProstule(e) {\n      const elDiv = document.createElement('div');\n      elDiv.classList.add('movies__container__item');\n\n      const moviePoster = document.createElement('img');\n      moviePoster.src = `https://image.tmdb.org/t/p/w500${e.poster_path}`;\n      moviePoster.classList.add('movies__container__image');\n      elDiv.appendChild(moviePoster);\n\n      const text = document.createElement('div');\n      const title = document.createElement('p');\n      //\n      let t = '';\n      if (e.title.length <= 25) t = e.title;\n      else {\n        let elist = e.title.split('');\n        while (elist.length > 30) elist.pop();\n        elist.push('.');\n        elist.push('.');\n        elist.push('.');\n        t = elist.join('');\n      }\n      //\n      title.innerHTML = `${t}`;\n      title.classList.add('movies__container__title');\n      text.appendChild(title);\n\n      //const genreList = e.genres.map(e => e.name);\n      let gen = '';\n      // if (genreList.length == 1) genres += genreList[0];\n      // else if (genreList.length == 2)\n      //   genres += genreList[0] + ' ' + genreList[1];\n      // else genres += genreList[0] + ' ' + genreList[1] + ' ' + 'other';\n\n      //\n      let genreList = await genres(); //am o lista de obiecte, unde fiecare obiect are id si nume\n      let genreIds = e.genre_ids; //aici am o lista de Id-uri\n      gen += createGenreString(genreList, genreIds);\n      //\n\n      gen += ' | ';\n      const year = e.release_date.slice(0, 4);\n      gen += `${year}`;\n      const subtitle = document.createElement('p');\n      subtitle.innerHTML = gen;\n      subtitle.classList.add('movies__container__genre');\n      text.appendChild(subtitle);\n\n      elDiv.appendChild(text);\n\n      // console.log(genres);\n\n      return elDiv;\n    }\n  }\n  function createGenreString(genreList, genreIds) {\n    // o sa imi fac o lista de stringuri facand match din genre id cu genre list\n\n    // console.log('----------------');\n    // console.log(genreList);\n    // console.log(genreIds);\n    // console.log('----------------');\n\n    let genreStrings = [];\n    let ok = false;\n    for (let i = 0; i < genreIds.length; i++) {\n      ok = false;\n      for (let j = 0; j < genreList.length && ok === false; j++) {\n        if (genreIds[i] === genreList[j].id) {\n          genreStrings.push(genreList[j].name);\n          ok = true;\n        }\n      }\n    }\n    //aici voi avea in genreStrings toate genurile aferente unui film, sub forma de lista de stringuri\n    console.log(genreStrings);\n    //eu vreau sa returnez un String care sa contina max 2 genuri + cuvantul other\n    let ans = ''; //ans de la answer\n    if (genreStrings.length === 1) ans = genreStrings[0];\n    else if (genreStrings.length === 2)\n      ans = genreStrings[0] + ', ' + genreStrings[1];\n    else ans = genreStrings[0] + ', ' + genreStrings[1] + ', ' + 'other';\n\n    return ans;\n  }\n};\n","const key = require('./key').key;\n\nmodule.exports = async page => {\n  const response2 = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?page=${page}&api_key=${key}`\n  );\n  const obj2 = await response2.json();\n  const trendingList = obj2.results;\n\n  // console.log(obj2.page);\n  // console.log(obj2.total_pages);\n  //console.log(obj2.total_results);\n\n  return trendingList;\n};\n","module.exports = {\n  key: '8b218b85545392c9f8705c30fbfd1bce',\n};\n","const key = require('./key').key;\n\nfetch(\n  `https://api.themoviedb.org/3/genre/movie/list?language=en&api_key=${key}`\n)\n  .then(res => res.json())\n  .then(res => console.log(res.genres));\n\nmodule.exports = async () => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?language=en&api_key=${key}`\n  );\n  const genreObj = await res.json();\n\n  return genreObj.genres; //returneaza o lista\n};\n","const genres = require('./genre');\n\nmodule.exports = async movie => {\n  const modal = document.querySelector('.modal-wrapper');\n  const closeModalBtn = document.querySelector('.backdrop');\n\n  toggleModal();\n\n  closeModalBtn.addEventListener('click', () => {\n    modal.classList.add('is-hidden');\n  });\n\n  function toggleModal() {\n    modal.classList.toggle('is-hidden');\n  }\n\n  const voteRating = document.getElementById('voteRating');\n  const voteCount = document.getElementById('voteCount');\n  const popul = document.getElementById('popul');\n  const origTitle = document.getElementById('origTitle');\n  const about = document.getElementById('about');\n  const image = document.getElementById('img');\n  const filmTitle = document.getElementById('film-title');\n\n  //\n  const gen = document.getElementById('genre');\n  let genreList = await genres();\n  let genreIds = movie.genre_ids;\n  gen.innerHTML = createGenreString(genreList, genreIds);\n  //\n  voteRating.innerHTML = movie.vote_average;\n  voteCount.innerHTML = movie.vote_count;\n  popul.innerHTML = movie.popularity;\n  origTitle.innerHTML = movie.original_title;\n  about.innerHTML = movie.overview;\n  image.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  filmTitle.innerHTML = movie.title;\n  // console.log(filmTitle);\n  // console.log(movie.title);\n\n  function createGenreString(genreList, genreIds) {\n    // o sa imi fac o lista de stringuri facand match din genre id cu genre list\n\n    // console.log('----------------');\n    // console.log(genreList);\n    // console.log(genreIds);\n    // console.log('----------------');\n\n    let genreStrings = '';\n    let ok = false;\n    for (let i = 0; i < genreIds.length; i++) {\n      ok = false;\n      for (let j = 0; j < genreList.length && ok === false; j++) {\n        if (genreIds[i] === genreList[j].id) {\n          genreStrings += genreList[j].name;\n          genreStrings += ', ';\n          ok = true;\n        }\n      }\n    }\n\n    let n = genreStrings.length;\n    genreStrings = genreStrings.slice(0, n - 2);\n    return genreStrings;\n  }\n};\n","const renderPages = require('./JavaScript/body');\nconst blabla = require('./JavaScript/number'); //doar numele functiei\nconst search = require('./JavaScript/header');\n\nsearch();\nblabla(); //se apeleaza functia\n\n//renderPages(5);\n","module.exports = () => {\n  const renderPages = require('./body');\n\n  let currentPage = 1;\n  const numbersDiv = document.querySelector('.numbers');\n  let currentHtmlElement = document.getElementById(`${currentPage}`);\n\n  const rightBtn = document.querySelector('.right');\n  const leftBtn = document.querySelector('.left');\n\n  addRed();\n\n  window.addEventListener('DOMContentLoaded', function () {\n    renderPages(currentPage);\n    renderNumbers();\n  });\n\n  function renderNumbers() {\n    numbersDiv.innerHTML = '';\n\n    for (let i = currentPage - 2; i <= currentPage + 2 && i < 20; i++) {\n      if (i > 1 && i < 20) {\n        let numberDiv = document.createElement('div');\n        numberDiv.classList.add('number');\n        numberDiv.innerHTML = `${i}`;\n        numberDiv.setAttribute('id', `${i}`);\n        numbersDiv.appendChild(numberDiv);\n\n        numberDiv.addEventListener('click', () => {\n          deleteRed();\n\n          currentPage = numberDiv.id;\n          currentHtmlElement = document.getElementById(`${currentPage}`);\n          renderPages(currentPage);\n          //numbersDiv.innerHTML = '';\n          console.log(currentPage);\n          //renderNumbers();\n\n          //console.log(renderNumbers);\n\n          addRed();\n        });\n      }\n    }\n  }\n\n  //   function toggleCurrentPage() {\n  //     currentHtmlElement.classList.toggle('current-page');\n  //   }\n\n  function addRed() {\n    currentHtmlElement.classList.add('current-page');\n  }\n\n  function deleteRed() {\n    currentHtmlElement.classList.toggle('current-page');\n  }\n\n  rightBtn.addEventListener('click', () => {\n    if (currentPage < 20) {\n      // console.log(currentPage);\n      // console.log(currentHtmlElement);\n\n      deleteRed();\n      currentPage++;\n\n      renderPages(currentPage);\n      renderNumbers();\n      currentHtmlElement = document.getElementById(`${currentPage}`);\n\n      deleteRed();\n      //console.log(currentPage);\n      //console.log(currentHtmlElement);\n    }\n  });\n\n  leftBtn.addEventListener('click', () => {\n    if (currentPage > 1) {\n      // console.log(currentPage);\n      //console.log(currentHtmlElement);\n\n      deleteRed();\n      currentPage--;\n\n      renderPages(currentPage);\n      renderNumbers();\n      currentHtmlElement = document.getElementById(`${currentPage}`);\n\n      addRed();\n      //console.log(currentPage);\n      //console.log(currentHtmlElement);\n    }\n  });\n};\n","const modal = require('./modal');\n\nmodule.exports = () => {\n  const search = document.querySelector('.search-bar');\n  let movieTitle;\n  search.addEventListener('input', e => {\n    movieTitle = e.target.value;\n  });\n\n  //console.log(movieTitle);\n\n  const searchBtn = document.querySelector('.search-button');\n  searchBtn.addEventListener('click', e => {\n    const key = require('./key').key;\n    const url = `https://api.themoviedb.org/3/search/movie?query=${movieTitle}&include_adult=false&language=en-US&page=1&api_key=${key}`;\n    let movieObj;\n    (async () => {\n      const response = await fetch(url);\n      const res = await response.json();\n\n      movieObj = res.results[0];\n\n      console.log('------  Obiect Giulia  -----');\n      console.log(movieObj);\n\n      modal(movieObj);\n    })();\n  });\n};\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7KuJr","$eLMAK","$2X5g8","then","list","console","log","page","renderPage","movieList","movieContainer","document","querySelector","createElementProstule","e","elDiv","createElement","classList","add","moviePoster","src","poster_path","appendChild","text","title","t","length","elist","split","pop","push","join","innerHTML","gen","createGenreString","genreList","genreIds","genreStrings","ok","i","j","name","genre_ids","year","release_date","slice","subtitle","forEach","movie","htmlElement","addEventListener","event","$5a44aafdcc2fab0e$require$key","$jlIdh","key","response2","fetch","obj2","json","trendingList","results","$ac0b25c9a1333ab3$require$key","res","genres","genreObj","modal","closeModalBtn","toggle","voteRating","getElementById","voteCount","popul","origTitle","about","image","filmTitle","n","vote_average","vote_count","popularity","original_title","overview","$b52d25a72bb4cd31$exports","renderPages","currentPage","numbersDiv","currentHtmlElement","rightBtn","leftBtn","renderNumbers","numberDiv","setAttribute","deleteRed","addRed","$bf18e6d3494e7659$exports","movieTitle","search","target","value","searchBtn","movieObj","url","response"],"version":3,"file":"index.3ee78abd.js.map"}